cstring:
  to clear: charray[0] = '\0';
  const char* always has a sentinel character

getline:
  #include<istream> or #include<fstream>
    istream.getline(char*, int size)
    istream.getline(char*, int size, char delim)
  #include<string>
    istream& getline(istream&, string, char delim)

strcpy:
  #include<cstring>
    char* strcpy(char* dest, const char* source)
    //adds sentinel character to dest!

strcat:
  #include<cstring>
    char* strcat(char* dest, const char* source)

strcmp:
  #include<cstring>
    int strcmp(const char*, const char*);
    //returns 0 if identical
    //returns >0 if 1st char to not match has 
    //greater value in charray1 vs charray2
    //and vice versa

strncmp:
  #include<cstring>
    int strncmp(const char*, const char*, int n);
    //strcmp() on first n characters of both strings
    //C doesn't support overloading

vector:
  #include<vector>
    typedef vector<Class> Vec;
    typedef vector<Class>::iterator VecIt;
  append_1_element
    vecobj.push_back(Class element);
  insert
    vecobj.insert();
  search
    vecobj.find(vecobj.begin(), vecobj.end(), Class element);
    //returns VecIt pointing to element found

string
  #include<string>
    append_char
      void push_back(char ch);
